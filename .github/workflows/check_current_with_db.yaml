---
    on:
      push:
        branches:
          - main
          - master
      pull_request:
        branches:
          - main
          - master
          
      workflow_dispatch:
      workflow_call:
        inputs:
          password_db:
            description: Password for the data base.
            required: true
            type: string
            default: "password"

    permissions:
      contents: read
    name: R-CMD-check
    jobs:
      R-CMD-check:
        runs-on: ${{ matrix.config.os }}
        name: ${{ matrix.config.os }} (${{ matrix.config.r }})
        strategy:
          fail-fast: false
          matrix:
            config:
              - os: macos-latest
                r: release
              - os: windows-latest
                r: release
              - os: ubuntu-latest
                r: devel
                http-user-agent: release
              - os: ubuntu-latest
                r: release
              - os: ubuntu-latest
                r: oldrel-1
        env:
          GITHUB_PAT: ${{secrets.CONNECTOR_ACTION_PAT}}
          R_KEEP_PKG_SOURCE: true
          POSTGRES_PW: ${{inputs.password_db}}
        steps:
          - uses: actions/checkout@v4
          - uses: r-lib/actions/setup-pandoc@v2
    
          - uses: r-lib/actions/setup-r@v2
            with:
              r-version: ${{matrix.config.r}}
              http-user-agent: ${{matrix.config.http-user-agent}}
              use-public-rspm: true
    
          - uses: r-lib/actions/setup-r-dependencies@v2
            with:
              extra-packages: any::rcmdcheck
              needs: check
    
          - name: Start local postgres server with Docker
            if: runner.os == 'Linux'
            run: |
              docker pull postgres
              docker run --name my-postgres --env POSTGRES_PASSWORD=${{env.POSTGRES_PW}} --publish 5432:5432 --detach postgres
    
          - uses: r-lib/actions/check-r-package@v2
            with:
              upload-snapshots: true
    
          - name: Stop and remove postgres server
            if: runner.os == 'Linux'
            run: |
              docker stop my-postgres
              docker remove my-postgres